/*
 * Service Registry Service - Fleet Manager - v1
 * Main entry point for the system, responsible for all sorts of management operations for the whole service of managed service registry.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openshift.cloud.api.srs.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.openshift.cloud.api.srs.models.RegistryStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Service Registry instance within a multi-tenant deployment.
 */
@ApiModel(description = "Service Registry instance within a multi-tenant deployment.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-08T16:30:55.340479607-04:00[America/New_York]")
public class Registry {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RegistryStatus status;

  public static final String SERIALIZED_NAME_REGISTRY_URL = "registryUrl";
  @SerializedName(SERIALIZED_NAME_REGISTRY_URL)
  private String registryUrl;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REGISTRY_DEPLOYMENT_ID = "registryDeploymentId";
  @SerializedName(SERIALIZED_NAME_REGISTRY_DEPLOYMENT_ID)
  private Integer registryDeploymentId;


  public Registry id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Registry status(RegistryStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")

  public RegistryStatus getStatus() {
    return status;
  }


  public void setStatus(RegistryStatus status) {
    this.status = status;
  }


  public Registry registryUrl(String registryUrl) {
    
    this.registryUrl = registryUrl;
    return this;
  }

   /**
   * Get registryUrl
   * @return registryUrl
  **/
  @ApiModelProperty(required = true, value = "")

  public String getRegistryUrl() {
    return registryUrl;
  }


  public void setRegistryUrl(String registryUrl) {
    this.registryUrl = registryUrl;
  }


  public Registry name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * User-defined Registry name. Does not have to be unique.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User-defined Registry name. Does not have to be unique.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Registry registryDeploymentId(Integer registryDeploymentId) {
    
    this.registryDeploymentId = registryDeploymentId;
    return this;
  }

   /**
   * Identifier of a multi-tenant deployment, where this Service Registry instance resides.
   * @return registryDeploymentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier of a multi-tenant deployment, where this Service Registry instance resides.")

  public Integer getRegistryDeploymentId() {
    return registryDeploymentId;
  }


  public void setRegistryDeploymentId(Integer registryDeploymentId) {
    this.registryDeploymentId = registryDeploymentId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Registry registry = (Registry) o;
    return Objects.equals(this.id, registry.id) &&
        Objects.equals(this.status, registry.status) &&
        Objects.equals(this.registryUrl, registry.registryUrl) &&
        Objects.equals(this.name, registry.name) &&
        Objects.equals(this.registryDeploymentId, registry.registryDeploymentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, registryUrl, name, registryDeploymentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Registry {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    registryUrl: ").append(toIndentedString(registryUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    registryDeploymentId: ").append(toIndentedString(registryDeploymentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

